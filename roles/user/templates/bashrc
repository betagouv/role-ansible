# System-wide .bashrc file for interactive bash(1) shells.

# To enable the settings / commands in this file for login shells as well,
# this file has to be sourced in /etc/profile.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# enable bash completion in interactive shells
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# if the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found ]; then
  function command_not_found_handle {
          # check because c-n-f could've been removed in the meantime
                if [ -x /usr/lib/command-not-found ]; then
       /usr/bin/python /usr/lib/command-not-found -- $1
                   return $?
                elif [ -x /usr/share/command-not-found ]; then
       /usr/bin/python /usr/share/command-not-found -- $1
                   return $?
    else
       return 127
    fi
  }
fi

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in     xterm-color) color_prompt=yes;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

NORMAL='\[\033[00m\]'
RED='\[\033[0;31m\]'
LRED='\[\033[1;31m\]'
GREEN='\[\033[0;32m\]'
LGREEN='\[\033[1;32m\]'
YELLOW='\[\033[0;33m\]'
LYELLOW='\[\033[1;33m\]'
BLUE='\[\033[0;34m\]'
LBLUE='\[\033[1;34m\]'
MAGENTA='\[\033[0;35m\]'
LMAGENTA='\[\033[1;35m\]'
CYAN='\[\033[0;36m\]'
LCYAN='\[\033[1;36m\]'
WHITE='\[\033[0;37m\]'
LWHITE='\[\033[1;37m\]'

if [[ "$USER" == "root" ]]
then
  export PS1="${LBLUE}<${CYAN}\t${LBLUE}>[${LRED}\u@\h${LBLUE}:${YELLOW}\w${LBLUE}]\`if [[ \$? = \"0\" ]]; then echo \"${LWHITE}\"; else echo \"${RED}\"; fi\`#${NORMAL} "
else
  export PS1="${LBLUE}<${CYAN}\t${LBLUE}>[${GREEN}\u@\h${LBLUE}:${YELLOW}\w${LBLUE}]\`if [[ \$? = \"0\" ]]; then echo \"${LWHITE}\"; else echo \"${RED}\"; fi\`\$${NORMAL} "
fi

if [ -d $HOME/.bashrc.d ]; then
  for f in $HOME/.bashrc.d/*; do
    source $f
  done
fi
